import streamlit as st
from docx import Document
from io import BytesIO
import geopandas as gpd

# Configura√ß√£o da p√°gina inicial
st.set_page_config(page_title="Gerador de Relat√≥rios Ambientais", layout="wide")

# Paleta de cores personalizada
primary_color = "#8FC9CB"
secondary_color = "#97C1A9"
background_color = "#CCE2CB"
accent_color = "#5FA37A"
text_color = "#2E4053"

# CSS para melhoria da interface
st.markdown(f"""
    <style>
    .main {{
        background-color: {background_color};
        padding: 20px;
    }}
    .block-container {{
        padding: 2rem;
        background: white;
        border-radius: 10px;
        box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
    }}
    .stButton>button {{
        background-color: {primary_color};
        color: white;
        font-size: 18px;
        border-radius: 10px;
        padding: 10px 20px;
        border: none;
        width: 100%;
    }}
    .stButton>button:hover {{
        background-color: {accent_color};
    }}
    .stTitle {{
        color: {text_color};
        font-size: 28px;
        font-weight: bold;
        text-align: center;
    }}
    .stHeader {{
        color: {secondary_color};
        font-size: 24px;
        text-align: center;
    }}
    .styled-table {{
        width: 100%;
        border-collapse: collapse;
        margin: 20px 0;
        font-size: 18px;
        text-align: left;
    }}
    .styled-table th, .styled-table td {{
        padding: 10px;
        border: 1px solid #ddd;
    }}
    .styled-table th {{
        background-color: {primary_color};
        color: white;
        text-align: center;
    }}
    </style>
""", unsafe_allow_html=True)

# Estado da p√°gina
if "pagina" not in st.session_state:
    st.session_state.pagina = "inicio"

# P√°gina inicial
if st.session_state.pagina == "inicio":
    st.markdown("<h1 class='stTitle'>üåø Gerador de Relat√≥rios Ambientais</h1>", unsafe_allow_html=True)
    st.markdown("<h2 class='stHeader'>Automatize a cria√ß√£o de relat√≥rios ambientais com an√°lises fitossociol√≥gicas e estruturais.</h2>", unsafe_allow_html=True)
    if st.button("üöÄ Iniciar Elabora√ß√£o"):
        st.session_state.pagina = "dados_gerais"
        st.rerun()

# Dados Gerais
elif st.session_state.pagina == "dados_gerais":
    st.markdown("<h2 class='stHeader'>üìå Informa√ß√µes Gerais</h2>", unsafe_allow_html=True)
    nome_projeto = st.text_input("Nome do Projeto", "Inserir")
    responsavel = st.text_input("Respons√°vel T√©cnico", "Inserir")
    data = st.date_input("Data do Relat√≥rio")

    # Localiza√ß√£o do Projeto (Estado e Munic√≠pio)
    estado = st.selectbox("Selecione o Estado", ["Selecione", "AC", "AL", "AP", "AM", "BA", "CE", "DF", "ES", "GO", "MA", "MT", "MS", "MG", "PA", "PB", "PR", "PE", "PI", "RJ", "RN", "RS", "RO", "RR", "SC", "SP", "SE", "TO"])
    municipio = st.text_input("Munic√≠pio do Projeto", "Inserir")
    
    if st.button("Avan√ßar para Dados do Requerente"):
        st.session_state.pagina = "dados_requerente"
        st.rerun()

# Dados do Requerente
elif st.session_state.pagina == "dados_requerente":
    st.markdown("<h2 class='stHeader'>üìå Dados do Requerente ou Empreendedor</h2>", unsafe_allow_html=True)
    
    # Dados do Empreendedor
    nome_razao = st.text_input("Nome/Raz√£o Social do Empreendedor")
    cnpj = st.text_input("CNPJ do Empreendedor")
    endereco = st.text_input("Endere√ßo do Empreendedor")
    telefone = st.text_input("Telefone")
    email = st.text_input("E-mail")

    # Dados do Requerente
    nome_requerente = st.text_input("Nome/Raz√£o Social do Requerente")
    cnpj_requerente = st.text_input("CNPJ do Requerente")
    endereco_requerente = st.text_input("Endere√ßo do Requerente")
    
    if st.button("Avan√ßar para Dados do Propriet√°rio do Im√≥vel"):
        st.session_state.pagina = "dados_proprietario"
        st.rerun()

    if st.button("Voltar para Dados Gerais"):
        st.session_state.pagina = "dados_gerais"
        st.rerun()

# Dados do Propriet√°rio do Im√≥vel
elif st.session_state.pagina == "dados_proprietario":
    st.markdown("<h2 class='stHeader'>üìå Dados do Propriet√°rio do Im√≥vel</h2>", unsafe_allow_html=True)
    
    denominacao_imovel = st.text_input("Denomina√ß√£o do Im√≥vel")
    proprietario = st.text_input("Propriet√°rio")
    cnpj_proprietario = st.text_input("CNPJ do Propriet√°rio")
    
    if st.button("Avan√ßar para Dados do Im√≥vel Rural"):
        st.session_state.pagina = "dados_imovel"
        st.rerun()

    if st.button("Voltar para Dados do Requerente"):
        st.session_state.pagina = "dados_requerente"
        st.rerun()

# Dados do Im√≥vel Rural
elif st.session_state.pagina == "dados_imovel":
    st.markdown("<h2 class='stHeader'>üìå Dados do Im√≥vel Rural e Empreendimento</h2>", unsafe_allow_html=True)
    
    denominacao_imovel_rural = st.text_input("Denomina√ß√£o do Im√≥vel")
    municipio_imovel = st.text_input("Munic√≠pio")
    estado_imovel = st.selectbox("Estado", ["Selecione", "AC", "AL", "AP", "AM", "BA", "CE", "DF", "ES", "GO", "MA", "MT", "MS", "MG", "PA", "PB", "PR", "PE", "PI", "RJ", "RN", "RS", "RO", "RR", "SC", "SP", "SE", "TO"])
    cep_imovel = st.text_input("CEP")
    matricula_imovel = st.text_input("Matr√≠cula do Im√≥vel")
    area_imovel = st.number_input("√Årea da Propriedade (ha)", min_value=0.1)
    car_imovel = st.text_input("CAR")
    atividades_imovel = st.text_area("Atividades Desenvolvidas no Empreendimento")
    
    if st.button("Avan√ßar para Dados da Empresa Respons√°vel"):
        st.session_state.pagina = "dados_empresa"
        st.rerun()

    if st.button("Voltar para Dados do Propriet√°rio"):
        st.session_state.pagina = "dados_proprietario"
        st.rerun()

# Dados da Empresa Respons√°vel
elif st.session_state.pagina == "dados_empresa":
    st.markdown("<h2 class='stHeader'>üìå Dados da Empresa Respons√°vel pela Elabora√ß√£o do PIA e Equipe T√©cnica</h2>", unsafe_allow_html=True)
    
    nome_empresa = st.text_input("Nome/Raz√£o Social")
    cnpj_empresa = st.text_input("CNPJ")
    inscricao_estadual_empresa = st.text_input("Inscri√ß√£o Estadual")
    endereco_empresa = st.text_input("Endere√ßo")
    municipio_empresa = st.text_input("Munic√≠pio")
    estado_empresa = st.selectbox("Estado", ["Selecione", "AC", "AL", "AP", "AM", "BA", "CE", "DF", "ES", "GO", "MA", "MT", "MS", "MG", "PA", "PB", "PR", "PE", "PI", "RJ", "RN", "RS", "RO", "RR", "SC", "SP", "SE", "TO"])
    cep_empresa = st.text_input("CEP")
    contato_empresa = st.text_input("Contato")
    cargo_empresa = st.text_input("Cargo")
    telefone_empresa = st.text_input("Telefone")
    email_empresa = st.text_input("E-mail")
    
    if st.button("Avan√ßar para Identifica√ß√£o da Equipe"):
        st.session_state.pagina = "equipe_tecnica"
        st.rerun()

    if st.button("Voltar para Dados do Im√≥vel Rural"):
        st.session_state.pagina = "dados_imovel"
        st.rerun()

# Identifica√ß√£o da Equipe Respons√°vel
elif st.session_state.pagina == "equipe_tecnica":
    st.markdown("<h2 class='stHeader'>üìå Identifica√ß√£o da Equipe Respons√°vel pela Elabora√ß√£o do Projeto</h2>", unsafe_allow_html=True)
    
    nome_profissional = st.text_input("Nome do Profissional")
    formacao_profissional = st.text_input("Forma√ß√£o T√©cnica")
    registro_profissional = st.text_input("Registro Profissional")
    responsabilidade_profissional = st.text_input("Responsabilidade")
    
    adicionar_profissional = st.checkbox("Adicionar outro profissional")
    
    if adicionar_profissional:
        nome_profissional_2 = st.text_input("Nome do 2¬∫ Profissional")
        formacao_profissional_2 = st.text_input("Forma√ß√£o T√©cnica do 2¬∫ Profissional")
        registro_profissional_2 = st.text_input("Registro Profissional do 2¬∫ Profissional")
        responsabilidade_profissional_2 = st.text_input("Responsabilidade do 2¬∫ Profissional")
    
    if st.button("Avan√ßar para Dados do Respons√°vel T√©cnico"):
        st.session_state.pagina = "responsavel_tecnico"
        st.rerun()

    if st.button("Voltar para Dados da Empresa Respons√°vel"):
        st.session_state.pagina = "dados_empresa"
        st.rerun()

# Dados do Respons√°vel T√©cnico
elif st.session_state.pagina == "responsavel_tecnico":
    st.markdown("<h2 class='stHeader'>üìå Dados do Respons√°vel T√©cnico pelo Projeto de Interven√ß√£o Ambiental</h2>", unsafe_allow_html=True)
    
    nome_responsavel = st.text_input("Nome")
    cpf_responsavel = st.text_input("CPF")
    email_responsavel = st.text_input("E-mail")
    telefone_responsavel = st.text_input("Telefone(s)")
    formacao_responsavel = st.text_input("Forma√ß√£o")
    registro_conselho_responsavel = st.text_input("N¬∫ de registro em conselho de classe")
    numero_art_responsavel = st.text_input("N¬∫ ART")
    ctf_aida_responsavel = st.text_input("CTF/AIDA")
    
    if st.button("Avan√ßar para Objetivo da Interven√ß√£o Ambiental"):
        st.session_state.pagina = "objetivo_intervencao"
        st.rerun()

    if st.button("Voltar para Identifica√ß√£o da Equipe"):
        st.session_state.pagina = "equipe_tecnica"
        st.rerun()

 #Objetivo da Interven√ß√£o Ambiental
# Objetivo da Interven√ß√£o Ambiental
elif st.session_state.pagina == "objetivo_intervencao":
    st.markdown("<h2 class='stHeader'>üìå Objetivo da Interven√ß√£o Ambiental</h2>", unsafe_allow_html=True)
    
    st.markdown("### Selecione as Interven√ß√µes e Preencha os Detalhes")
    
    # Op√ß√µes de interven√ß√µes
    opcoes_intervencao = [
        "Supress√£o de vegeta√ß√£o nativa", 
        "Interven√ß√£o em APPs", 
        "Supress√£o de sub-bosque", 
        "Manejo sustent√°vel", 
        "Destoca", 
        "Corte de √°rvores isoladas", 
        "Supress√£o de eucaliptos", 
        "Aproveitamento de material lenhoso"
    ]
    
    intervencoes_selecionadas = {}
    areas_intervencao = {}
    individuos_intervencao = {}
    
    tabela_html = """
    <table class='styled-table'>
        <tr>
            <th>Tipo de Interven√ß√£o</th>
            <th>√Årea (ha)</th>
            <th>N¬∫ de Indiv√≠duos</th>
        </tr>
    """
    
    for opcao in opcoes_intervencao:
        intervencoes_selecionadas[opcao] = st.checkbox(opcao)
        area_input = "-"
        individuos_input = "-"
        
        if intervencoes_selecionadas[opcao]:
            area_input = st.number_input(f"√Årea (ha) - {opcao}", min_value=0.1, value=1.0, key=f"area_{opcao}")
            if opcao in ["Corte de √°rvores isoladas", "Supress√£o de eucaliptos"]:
                individuos_input = st.number_input(f"N¬∫ de Indiv√≠duos - {opcao}", min_value=1, value=10, key=f"ind_{opcao}")
        
        tabela_html += f"<tr><td>{opcao}</td><td>{area_input}</td><td>{individuos_input}</td></tr>"
    
    tabela_html += "</table>"
    st.markdown(tabela_html, unsafe_allow_html=True)
    
    # Verificar se o bot√£o "Pr√≥ximo" foi pressionado para avan√ßar
    if st.button("Pr√≥ximo"):
        # Se pelo menos uma interven√ß√£o for selecionada, avan√ßa para a pr√≥xima p√°gina
        if any(intervencoes_selecionadas.values()):
            st.session_state.pagina = "caracterizacao_meio_biotico"
            st.experimental_rerun()  # Isso vai recarregar a p√°gina e avan√ßar para a pr√≥xima
        else:
            st.warning("Por favor, selecione pelo menos uma interven√ß√£o antes de avan√ßar.")
    
    if st.button("Voltar para Dados do Respons√°vel T√©cnico"):
        st.session_state.pagina = "responsavel_tecnico"
        st.experimental_rerun()  # Isso vai recarregar a p√°gina anterior

# √Årea de Preserva√ß√£o Permanente (APP)
elif st.session_state.pagina == "app":
    st.markdown("<h2 class='stHeader'>üìå √Årea de Preserva√ß√£o Permanente (APP)</h2>", unsafe_allow_html=True)
    
    # Pergunta se a √°rea de interven√ß√£o est√° inserida em APP
    app_inserido = st.radio("A √°rea de interven√ß√£o do projeto est√° inserida em √Årea de Preserva√ß√£o Permanente (APP)?", ["Selecione", "Sim", "N√£o"])
    
    # Condi√ß√£o para mostrar a √°rea sobreposta se o usu√°rio selecionar "Sim"
    if app_inserido == "Sim":
        area_app = st.number_input("Tamanho da √°rea (ha) sobreposta com a √°rea de interven√ß√£o", min_value=0.1)
    else:
        area_app = 0
    
    # Bot√µes para avan√ßar ou voltar
    if st.button("Avan√ßar para Corredores Ecol√≥gicos"):
        # Verificando se o bot√£o "Avan√ßar" pode funcionar
        if app_inserido == "Sim" and area_app > 0:  # Verifica se a √°rea foi preenchida
            st.session_state.pagina = "corredores_ecologicos"
            st.experimental_rerun()  # Isso vai recarregar a p√°gina e avan√ßar para a pr√≥xima
        elif app_inserido == "N√£o":  # Se a resposta for "N√£o", avan√ßa para a pr√≥xima p√°gina
            st.session_state.pagina = "corredores_ecologicos"
            st.experimental_rerun()  # Isso vai recarregar a p√°gina e avan√ßar para a pr√≥xima
        else:
            st.warning("Por favor, insira os dados necess√°rios antes de avan√ßar.")
    
    # Bot√£o de Voltar
    if st.button("Voltar para Dados do Respons√°vel T√©cnico"):
        st.session_state.pagina = "responsavel_tecnico"
        st.experimental_rerun()  # Isso vai recarregar a p√°gina anterior



# Reserva da Biosfera da Mata Atl√¢ntica
elif st.session_state.pagina == "reserva_biosfera_mata_atlantica":
    st.markdown("<h2 class='stHeader'>üìå Reserva da Biosfera da Mata Atl√¢ntica</h2>", unsafe_allow_html=True)
    reserva_biosfera = st.radio("A √°rea de interven√ß√£o do projeto est√° inserida na reserva ou seu entorno?", ["Sim", "N√£o"])
    if reserva_biosfera == "Sim":
        area_nucleo = st.text_input("√Årea - N√∫cleo")
        zona_amortecimento = st.text_input("Zona de Amortecimento")
        zona_transicao = st.text_input("Zona de Transi√ß√£o")
    
    if st.button("Avan√ßar para Reserva da Biosfera da Serra do Espinha√ßo"):
        st.session_state.pagina = "reserva_biosfera_serra_espinhaco"
        st.rerun()

# Reserva da Biosfera da Serra do Espinha√ßo
elif st.session_state.pagina == "reserva_biosfera_serra_espinhaco":
    st.markdown("<h2 class='stHeader'>üìå Reserva da Biosfera da Serra do Espinha√ßo</h2>", unsafe_allow_html=True)
    reserva_biosfera_serra = st.radio("A √°rea de interven√ß√£o do projeto est√° inserida na reserva ou seu entorno?", ["Sim", "N√£o"])
    if reserva_biosfera_serra == "Sim":
        area_nucleo_serra = st.text_input("√Årea - N√∫cleo")
        zona_amortecimento_serra = st.text_input("Zona de Amortecimento")
        zona_transicao_serra = st.text_input("Zona de Transi√ß√£o")
    
    if st.button("Avan√ßar para S√≠tios Ramsar"):
        st.session_state.pagina = "sitos_ramsar"
        st.rerun()

# S√≠tios Ramsar
elif st.session_state.pagina == "sitos_ramsar":
    st.markdown("<h2 class='stHeader'>üìå S√≠tios Ramsar</h2>", unsafe_allow_html=True)
    sitios_ramsar = st.radio("A √°rea de interven√ß√£o do projeto est√° inserida em S√≠tios Ramsar?", ["Sim", "N√£o"])
    if sitios_ramsar == "Sim":
        nome_sitio = st.text_input("Nome do S√≠tio Ramsar")
    
    if st.button("Avan√ßar para Hidrografia"):
        st.session_state.pagina = "hidrografia"
        st.rerun()

# Hidrografia
elif st.session_state.pagina == "hidrografia":
    st.markdown("<h2 class='stHeader'>üìå Hidrografia</h2>", unsafe_allow_html=True)
    bacia_hidrografica = st.text_input("Bacia Hidrogr√°fica")
    subbacia_hidrografica = st.text_input("Subbacia Hidrogr√°fica")
    
    if st.button("Avan√ßar para Invent√°rio Florestal"):
        st.session_state.pagina = "inventario_florestal"
        st.rerun()

# Invent√°rio Florestal
elif st.session_state.pagina == "inventario_florestal":
    st.markdown("<h2 class='stHeader'>üìå Invent√°rio Florestal</h2>", unsafe_allow_html=True)
    tipo_inventario = st.selectbox("Tipo de Invent√°rio", ["Censo Florestal", "Invent√°rio por Amostragem"])
    
    if tipo_inventario == "Censo Florestal":
        area_inventario = st.number_input("Tamanho da √°rea em hectares")
        formula_inventario = st.text_input("F√≥rmula a ser utilizada")
    elif tipo_inventario == "Invent√°rio por Amostragem":
        tamanho_parcela = st.number_input("Tamanho da parcela (ha)")
        dimensao_parcela = st.text_input("Dimens√µes da parcela (comprimento x largura)")
        area_inventario_amostragem = st.number_input("Tamanho da √°rea do invent√°rio")
        tipo_analise = st.selectbox("Tipo de An√°lise", ["Casual Simples", "Casual Estratificada"])
        
        if tipo_analise == "Casual Simples":
            formula_volume = st.text_input("F√≥rmula do volume")
        elif tipo_analise == "Casual Estratificada":
            num_estrato = st.number_input("N√∫mero de estratos")
            nome_estrato = st.text_input("Nome do estrato")
            tamanho_area_estrato = st.number_input("Tamanho da √°rea do estrato")
            formula_estrato = st.text_input("F√≥rmula do estrato")
    
    if st.button("Avan√ßar para Enviar Resultados"):
        st.session_state.pagina = "enviar_resultados"
        st.rerun()

# Enviar Resultados
elif st.session_state.pagina == "enviar_resultados":
    st.markdown("<h2 class='stHeader'>üìå Enviar Resultados para An√°lise</h2>", unsafe_allow_html=True)
    st.write("Por favor, envie os dados para que possamos rodar os resultados e analisar o invent√°rio florestal.")
 
